
name: "Build ffmpeg"

on:
  push:
    tags:
    - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        name: [
          darwin-x86_64
        ]
        include:
          - name: darwin-x86_64
            os: macOS-latest

    steps:
    - uses: actions/checkout@v2
    - name: Cache Workspace
      id: cache
      uses: actions/cache@v1
      with:
        path: build
        key: ${{ matrix.name }}-cache

    # Linux Builds
    - name: Linux - Setup Dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get --yes --no-install-recommends install binfmt-support qemu-user-static
        docker run --rm --privileged multiarch/qemu-user-static:register --reset
    - name: Linux - Build Docker Image 
      if: runner.os == 'Linux'
      run: |
        docker build --build-arg BASE_IMAGE=${{ matrix.BASE_IMAGE }} -f ${{ matrix.DOCKERFILE }} -t ffmpeg-builder .
    - name: Linux - Build static ffmpeg binary
      if: runner.os == 'Linux'
      run: |
        mkdir -p build
        docker run -v $(pwd)/build:/build -e TARGET_OS=${{ matrix.TARGET_OS }} ffmpeg-builder
    - name: Linux - Fix permissions
      if: runner.os == 'Linux'
      run: |
        sudo chown -R $USER:$USER build

    # macOS Build
    - name: macOS - Build static ffmpeg binary
      if: runner.os == 'macOS'
      run: |
        mkdir -p build
        cd build && SKIPINSTALL=yes VERBOSE=yes ../build-ffmpeg --build

    - name: Prepare Asset
      run: |
        mkdir -p package/usr/local/bin/
        cp build/workspace/bin/ffmpeg package/usr/local/bin/ffmpeg
        tar -C package -zcvf ffmpeg-${{ matrix.name }}.tar.gz .

    - name: Upload Asset
      uses: actions/upload-artifact@v1
      with:
        name: ffmpeg-${{ matrix.name }}
        path: ffmpeg-${{ matrix.name }}.tar.gz
